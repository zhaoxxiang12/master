package PositionOperation;

public class PositionOperate {
    public static void main(String[] args) {
        /**
         * 计算机常见编码方式 1byte = 8bit
         *
         * 规定最高位默认为符号位 0：正数  1：负数
         * 源码对程序员是友好的，对计算机是不能直接使用，不会参与运算，计算机中的数值采用补码存储并计算
         *
         * 2.反码：将二进制吗按位取反
         *
         * 对正数：源码 = 反码 = 补码
         *  -3   源码：1000 0011   反码：1111 1100  除符号之外的其他位按位取反
         *
         *  3.补码： 负数将二进制按位取反加1    -3补码 1111 1101
         */
        byte a = +3; // 1bite   // +3 源码 0000 0011  -3 源码
        System.out.println(a);

        // 计算机如何计算 4-3
        //  4补码：0000  0100
        //  -3补码 1111  1101
        //        0000 0001    十进制→1
        /**
         *      -1+（-3）
         *   -1的反码  1111    1111
         *   -3的反码  1111    1101
         *            1111    1100  补码
         *
         *            1000    0011  补码的反码
         *      源码   1000    0100   源码
         *
         */
    }
}
