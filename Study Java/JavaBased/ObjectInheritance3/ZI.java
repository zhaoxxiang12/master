package ObjectInheritance3;

/**
 *
 *Object 是一个最强大的类型，可以表示任意对象
 * 重点：方法的重写 (方法的覆盖)
 * 前提：在子父类中
 * 要点：同名(子父类方法名相同)同参(子父类参数列表相同:参数类型、参数个数、参数顺序)同返回值类型
 *
 * 同返回值类型(子类的方法返回类型一定要小于等于父类方法返回值类型) 在正常的开发中，我们的子类与父类的方法的返回值类型需要一致
 *
 * 同返回值类型与修饰符有关吗？有关. 1.私有的方法是不能被重写的，也不能被调用
 * 2.子类的重写方法的访问修饰符范围>=父类的访问修饰符
 *
 * 重写口诀：同名 同参 同返回值类型   权限 >=父类
 *
 * 重载： 前提：在同一个类中    要点：同名不同参  与返回值类型无关  【构造方法】 是典型的方法重载
 *
 */
public class ZI extends FU {
    @Override  //注解：帮助我们自动强制检查当前的这个方法是否是重写父类的方法
    public void info(){
        System.out.println("子类info");
    }
    private void cc(){
        System.out.println("子类私有方法");
    }
    @Override
    void sys(){
        System.out.println("子类的default的方法执行");
    }
}
